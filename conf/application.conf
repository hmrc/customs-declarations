# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = customs-declarations

appUrl = "http://"${appName}"-host"

application.logger.name = ${appName}

# HTTP Verbs related config
bootstrap.http.headersAllowlist += "api-subscription-fields-id"
bootstrap.http.headersAllowlist += "X-Client-ID"
bootstrap.http.headersAllowlist += "X-Correlation-ID"
bootstrap.http.headersAllowlist = [ "Gov-Test-Scenario"]
internalServiceHostPatterns = [ "localhost" ]

bootstrap.http.headersAllowlist = [ "Gov-Test-Scenario"]
internalServiceHostPatterns = [ "localhost" ]

xsd.locations.submit += "/api/conf/2.0/schemas/wco/declaration/DocumentMetaData_2_DMS.xsd"
xsd.locations.submit += "/api/conf/2.0/schemas/wco/declaration/WCO_DEC_2_DMS.xsd"

xsd.locations.cancel += "/api/conf/2.0/schemas/wco/declaration/CANCEL_METADATA.xsd"
xsd.locations.cancel += "/api/conf/2.0/schemas/wco/declaration/CANCEL.xsd"

xsd.locations.fileupload += "/api/conf/2.0/schemas/wco/fileupload/FileUploadRequest.xsd"

xml.max-errors = 25

circuitBreaker.numberOfCallsToTriggerStateChange = 5
circuitBreaker.unavailablePeriodDurationInMillis = 1000
circuitBreaker.unstablePeriodDurationInMillis = 10000

declarationStatus.requestDaysLimit = 90

# Fix SSL Engine closed already exceptions
http-verbs.retries.ssl-engine-closed-already.enabled = true

# 10MB
fileUpload.fileSize.maximum = 10485760
file-upload-upscan-callback.url = "http://localhost:9000"
file-transmission-callback.url = "http://localhost:9000"
fileUpload.fileGroupSize.maximum = 11

# 2 weeks
ttlInSeconds=1209600


nrs.enabled = true
nrs.apikey = "nrs-api-key"

shutter.v1 = "false"
shutter.v2 = "false"
shutter.v3 = "false"

# Play Modules

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.customs.declaration.config.CustomsDeclarationsModule"
play.modules.enabled += "uk.gov.hmrc.customs.declaration.CustomsApiCommonModule"

# For mongo driver migration
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.http.errorHandler = "uk.gov.hmrc.customs.declaration.config.CustomsErrorHandler"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.customs.declaration.controllers.CustomsDeclarationsController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.customs.declaration.controllers.DeclarationsDocumentationController = {
    needsLogging = false
    needsAuditing = false
  }

  controllers.Assets = {
    needsLogging = false
    needsAuditing = false
  }
}

# Microservice specific config
mongodb {
  uri = "mongodb://localhost:27017/customs-declarations"
}

microservice {
  services {

    nrs {
      host =  localhost
      port = 10028
      context = /submission
    }

    upscan-initiate-v1 {
      host = localhost
      port = 10028
      bearer-token = "real"
      context = /upscan/initiate
    }

    upscan-initiate-v2 {
      host = localhost
      port = 10028
      context = /upscan/v2/initiate
    }

    auth {
      host = localhost
      port = 10028
    }

    datastream {
      host = localhost
      port = 8100
    }

    api-subscription-fields {
      host = localhost
      port = 9650
      context = /field
    }

    wco-declaration {
      host = localhost
      port = 10028
      bearer-token = "real"
      context = /declarations/submitdeclaration

      stub {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration
      }
    }

    declaration-cancellation {
      host = localhost
      port = 10028
      bearer-token = "real"
      context = /declarations/submitdeclaration

      stub {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration
      }
    }

    customs-notification {
      host = localhost
      port = 9821
      bearer-token = "real"
      context = /customs-notification/notify
    }

    customs-declarations-metrics {
      host = localhost
      port = 9827
      context = /log-times
    }

    file-transmission {
      host = localhost
      port = 10028
      context = /file-transmission/request
    }

    v2 {
      wco-declaration {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration

        stub {
          host = localhost
          port = 10028
          bearer-token = "real"
          context = /declarations/submitdeclaration
        }
      }

      declaration-cancellation {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration

        stub {
          host = localhost
          port = 10028
          bearer-token = "real"
          context = /declarations/submitdeclaration
        }
      }

      declaration-status {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/retrieveinformation/v1

        stub {
          host = localhost
          port = 9478
          bearer-token = "real"
          context = /declarations/retrieveinformation/v1
        }
      }

      upscan-initiate-v1 {
        host = localhost
        port = 10028
        context = /upscan/initiate
      }

      upscan-initiate-v2 {
        host = localhost
        port = 10028
        context = /upscan/v2/initiate
      }

      file-transmission {
        host = localhost
        port = 10028
        context = /file-transmission/request

        stub {
          host = localhost
          port = 9478
          context = /file-transmission/request
        }
      }
    }

    v3 {
      wco-declaration {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration

        stub {
          host = localhost
          port = 10028
          bearer-token = "real"
          context = /declarations/submitdeclaration
        }
      }

      declaration-cancellation {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/submitdeclaration

        stub {
          host = localhost
          port = 10028
          bearer-token = "real"
          context = /declarations/submitdeclaration
        }
      }

      declaration-status {
        host = localhost
        port = 10028
        bearer-token = "real"
        context = /declarations/retrieveinformation/v1

        stub {
          host = localhost
          port = 9478
          bearer-token = "real"
          context = /declarations/retrieveinformation/v1
        }
      }

      upscan-initiate-v1 {
        host = localhost
        port = 10028
        context = /upscan/initiate
      }

      upscan-initiate-v2 {
        host = localhost
        port = 10028
        context = /upscan/v2/initiate
      }

      file-transmission {
        host = localhost
        port = 10028
        context = /file-transmission/request

        stub {
          host = localhost
          port = 9478
          context = /file-transmission/request
        }
      }
    }
  }
}

play.http.parser.maxMemoryBuffer=20M
